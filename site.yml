---
# This Playbook deploys a KairosDB cluster on Amazon EC2

- name: Provisioning benchmarking execution environment
  hosts: localhost
  gather_facts: False
  vars:
    key_name: jk_f_2015
    security_group: sg-03a2646a
    vpc_subnet_id: subnet-fa06e893
    instance_type: t2.micro
    image: ami-9a380b87
    region: eu-central-1
  tasks:
    - name: Provisioning instances from AWS EC2
      ec2:
        key_name: "{{ key_name }}"
        group: fio
        region: "{{ region }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: yes
        instance_tags:
          Name: fio
          exp: fio
        exact_count: 5
        count_tag:
          Name: fio
          exp: fio
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        assign_public_ip: yes
      register: ec2
    - name: Add new instance to host group
      add_host: hostname={{ item.public_ip }} groupname=launched
      with_items: ec2.instances
    - name: Wait for SSH to come up
      wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
      with_items: ec2.instances
    roles:
    - role: fio

# - name: Install and configure fio benchmark
#   hosts: tag_exp_fio
#   remote_user: ubuntu
#   gather_facts: yes
#   vars_files:
#   # Import variables specific to OS.
#   - "group_vars/{{ ansible_distribution }}"
#   roles:
#   - role: fio
#   #- role: iostat

# - name: Execute fio benchmark
#   hosts: tag_exp_fio
#   remote_user: ubuntu
#   gather_facts: yes
#   vars_files:
#   # Import OS related variables, e.g., "group_vars/ubuntu".
#   - "group_vars/{{ ansible_distribution }}"
#   # Import cloud provider related variables, e.g., "group_vars/aws".
#   - "group_vars/aws"
#   # Import fio variables
#   - "roles/fio/vars/main.yml"
#   tasks:
#     - name: Run fio workload read mmap
#       shell: "screen -S fio -d -m {{ fio_workload_dir }}/start_r_m.sh"

# Copy result files